---
- name: Ensure required packages are installed
  package:
    name:
      - nginx
      - openssl
    state: present
    update_cache: true

- name: Create directory for SSL certificates
  file:
    path: "{{ nginx_cert_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Generate a configuration file for the server CSR with SANs
  template:
    src: templates/localhost.cnf.j2
    dest: "{{ nginx_cert_path }}/localhost.cnf"
    mode: '0644'

- name: Generate CA key
  command: "openssl genrsa -out {{ nginx_cert_path }}/localCA.key 2048"
  args:
    creates: "{{ nginx_cert_path }}/localCA.key"

- name: Generate CA certificate
  command: >
    openssl req -x509 -new -nodes
    -key {{ nginx_cert_path }}/localCA.key
    -sha256 -days 3650
    -out {{ nginx_cert_path }}/localCA.crt
    -subj "/C=JP/ST=Kanagawa/L=Yokohama/O=Ansible Testing Lab/CN=MyCA"
  args:
    creates: "{{ nginx_cert_path }}/localCA.crt"

- name: Generate server key
  command: "openssl genrsa -out {{ nginx_cert_path }}/localhost.key 2048"
  args:
    creates: "{{ nginx_cert_path }}/localhost.key"

- name: Generate server CSR
  command: >
    openssl req -new 
    -key {{ nginx_cert_path }}/localhost.key
    -out {{ nginx_cert_path }}/localhost.csr
    -config {{ nginx_cert_path }}/localhost.cnf
    -subj "/C=JP/ST=Kanagawa/L=Yokohama/O=Ansible Testing Lab/CN=localhost"
  args:
    creates: "{{ nginx_cert_path }}/localhost.csr"

- name: Sign the server CSR with the CA key and certificate
  command: >
    openssl x509 -req
    -in {{ nginx_cert_path }}/localhost.csr
    -CA {{ nginx_cert_path }}/localCA.crt
    -CAkey {{ nginx_cert_path }}/localCA.key
    -CAcreateserial
    -out {{ nginx_cert_path }}/localhost.crt
    -days 1825
    -sha256
    -extensions req_ext
    -extfile {{ nginx_cert_path }}/localhost.cnf
  args:
    creates: "{{ nginx_cert_path }}/localhost.crt"

- name: Collect backend node IP addresses
  set_fact:
    backend_ips: "{{ backend_ips | default([]) + [backend_nodes_ips[item]] }}"
  loop: "{{ backend_nodes }}"
  
- name: Debug backend IPs
  debug:
    var: backend_ips

- name: Render NGINX reverse proxy configuration
  template:
    src: templates/reverse_proxy.j2
    dest: "{{ nginx_conf_path }}"
    owner: root
    group: root
    mode: '0644'
  notify: Restart Nginx

- name: Remove default NGINX configuration
  file:
    path: "{{ nginx_default_conf }}"
    state: absent

- name: Enable reverse proxy configuration
  file:
    src: "{{ nginx_conf_path }}"
    dest: "{{ nginx_conf_link }}"
    state: link
  notify: Restart Nginx

- name: Varidate NGINX configuration
  command: nginx -t
  changed_when: false
  failed_when: false
...
